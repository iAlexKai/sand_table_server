本项目是沙盘系统的服务器中控端，基于Flask框架编写，建议使用者首先看一遍Flask教程。
代码中包含两个重要组成部分，即前端html代码所在的templates文件夹和后端脚本app.py文件。

———————————————————————————————————————————————————————————————————————————
templates文件夹
    -home.html
     系统主页文件：主要包括两个按钮，对应当前已经实现的两个功能，即车辆控制子系统和车辆实时位置子系统

    -car_control.html
     沙盘车辆控制前端文件：主要包括9个控制按钮和一个返回主页按钮，每个控制按钮对应着app.py中的一个处理函数，函数会通过串口发对应的控制指令。

    -socket.html
     socket通信测试前端文件。当前主要分三个部分：返回主页按钮、开启socket服务端按钮以及log显示。
     点击开启服务器后，将调用app.py中的start_socket_to_raspberry()函数监听socket连接。

     本项目中还有一个socket_client.py文件，服务端开启后，在同一个局域网下运行该脚本即可建立起从客户端到服务器的单向通信。
     客户端发出 "qq"消息后，通信终止。 当前仅支持这一种终止通信的方式。

     后续可在该socket通信的基础上完成车辆实时位置显示功能：由树莓派或Nano将车辆的实时坐标通过socket发送给服务器，服务器解析数据后将各个车
     的位置画在前端页面上。

    -login.html
     一个简单的登录界面，为了调试阶段方便，当前没有将登录界面放到根路径上，后面有需要可以自行设置。

———————————————————————————————————————————————————————————————————————————
app.py文件
    Flask的后端控制脚本，具体的语法和控制方式请自行学习。现将各个函数的功能简单介绍如下：

    home()和login(): 分别是系统主页和登录界面的后端函数

    home_control(): home.html中两个按钮对应的函数，根据addr字段的不同，重定向到car_view和car_control两个函数

    start_server(): socket.html中start_server按钮对应的后端函数


